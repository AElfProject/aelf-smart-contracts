syntax = "proto3";

package treasury;

import "aelf/core.proto";
import "aelf/options.proto";
import "google/protobuf/empty.proto";

option csharp_namespace = "AElf.Contracts.Treasury";

service TreasuryContract {
    option (aelf.csharp_state) = "AElf.Contracts.Treasury.TreasuryContractState";

    // Action
    rpc InitialTreasuryContract (InitialTreasuryContractInput) returns (google.protobuf.Empty) {
    }
    rpc InitialMiningRewardProfitItem (InitialMiningRewardProfitItemInput) returns (google.protobuf.Empty) {
    }
    rpc Donate (DonateInput) returns (google.protobuf.Empty) {
    }
    rpc Release (ReleaseInput) returns (google.protobuf.Empty) {
    }
    rpc Register (RegisterInput) returns (google.protobuf.Empty) {
    }

    // View
    rpc GetWelfareRewardAmountSample (GetWelfareRewardAmountSampleInput) returns (GetWelfareRewardAmountSampleOutput) {
        option (aelf.is_view) = true;
    }
    rpc GetCurrentWelfareReward (google.protobuf.Empty) returns (aelf.SInt64Value) {
        option (aelf.is_view) = true;
    }
}

message InitialTreasuryContractInput {
}

message InitialMiningRewardProfitItemInput {
}

message DonateInput {
    string symbol = 1;
    sint64 amount = 2;
}

message ReleaseInput {
    sint64 term_number = 1;
}

message RegisterInput {
    string token_symbol = 1;
    string token_name = 2;
    sint64 total_supply = 3;
    sint32 decimals = 4;
    string connector_weight = 5;
}

message GetWelfareRewardAmountSampleInput {
    repeated sint64 value = 1;
}

message GetWelfareRewardAmountSampleOutput {
    repeated sint64 value = 1;
}
