syntax = "proto3";

option csharp_namespace = "AElf.CrossChain";

import "common.proto";
import "core.proto";
import "google/protobuf/timestamp.proto";

message CrossChainRequest {
    int32 fromChainId = 1; // own chain id
    int64 nextHeight = 2;
    int32 listeningPort = 3;
}

message CrossChainResponse {
    BlockData blockData = 1;
}

message HandShake {
    int32 listeningPort = 1;
    int32 fromChainId = 2;
    bool fromSideChain = 3;
}

message HandShakeReply {
    bool result = 1;
}

message SideChainInitializationRequest{
    int32 chainId =1;
}

message SideChainInitializationResponse{
    int32 chainId =1;
    Address creator = 2;
    google.protobuf.Timestamp creationTimestamp = 3;
    repeated bytes extraInformation = 4;
    int64 parentChainHeightOfCreation = 5; 
}

service CrossChainRpc {
    rpc RequestIndexingFromSideChain (CrossChainRequest) returns (stream CrossChainResponse) {}
    rpc RequestIndexingFromParentChain (CrossChainRequest) returns (stream CrossChainResponse) {}
    rpc CrossChainIndexingShake (HandShake) returns (HandShakeReply) {}
    rpc RequestChainInitializationContextFromParentChain (SideChainInitializationRequest) returns (SideChainInitializationResponse) {}
}

message BlockData{
    int32 chainId = 1;
    int64 height = 2;
    bytes payload = 3;
}

//message ChainInitializationContext{
//    int32 chainId =1;
//    Address creator = 2;
//    google.protobuf.Timestamp creationTimestamp = 3;
//    repeated bytes extraInformation = 4;
//    int64 parentChainHeightOfCreation = 5;
//}
