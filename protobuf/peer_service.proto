syntax = "proto3";

option csharp_namespace = "AElf.OS.Network.Grpc";

import "kernel.proto";
import "network_types.proto";
import "aelf/core.proto";

service PeerService {
    
    rpc RequestBlock (BlockRequest) returns (BlockReply) {}
    rpc RequestBlocks (BlocksRequest) returns (BlockList) {}

    rpc SendAnnounce (BlockAnnouncement) returns (VoidReply) {}
    rpc SendTransaction (aelf.Transaction) returns (VoidReply) {}
    
    rpc TransactionBroadcastStream (stream aelf.Transaction) returns (VoidReply) {}
    rpc AnnouncementBroadcastStream (stream BlockAnnouncement) returns (VoidReply) {}

    rpc Connect (Handshake) returns (ConnectReply) {}
    rpc FinalizeConnect (Handshake) returns (FinalizeConnectReply) {}
    rpc UpdateHandshake(UpdateHandshakeRequest) returns (Handshake) {}

    rpc Disconnect (DisconnectReason) returns (VoidReply) {}
}

// **** Connection *****

message ConnectReply {
    Handshake handshake = 1;
    AuthError error = 2;
}

enum AuthError {
    NONE = 0;
    UNKNOWN = 1;
    WRONG_SIGNATURE = 2;
    INVALID_HANDSHAKE = 3;
    INVALID_PEER = 4;
    CHAIN_MISMATCH = 5;
    PROTOCOL_MISMATCH = 6;
    CONNECTION_REFUSED = 7;
}

message UpdateHandshakeRequest {
}

// **** No reply *****

message VoidReply {
}


