syntax = "proto3";

package acs3;
import "common.proto";
import "aelf_options.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option (aelf.identity) = "acs3";

service AuthorizationContract {
    rpc Approve (ApproveInput) returns (google.protobuf.BoolValue) {
    }
    rpc Release (Hash) returns (google.protobuf.Empty) {
    }
}

message ApproveInput {
    Hash proposalHash = 1;
    bytes inputData= 2;
}

message Approval{
    Hash proposalHash = 1;
    bytes pubKey = 2;
    bytes inputData= 3;
}

message ApprovedResult {
    Hash proposalHash = 1;
    repeated Approval approvals = 5;
}

message GetProposalOutput{
    Hash proposalHash = 1;
    string contractMethodName = 2;
    Address toAddress = 3;
    bytes params = 4;
    google.protobuf.Timestamp expiredTime = 5;
    Address sender = 7;
    ProposalStatus status = 8;
}

message ProposalInfo{
    Hash proposalHash = 1;
    string contractMethodName = 2;
    Address toAddress = 3;
    bytes params = 4;
    google.protobuf.Timestamp expiredTime = 5;
    Address sender = 7;
}

enum ProposalStatus {
    Active = 0;
    Released = 1;
    Expired = 2;
}

enum ProposalLevel{
    Normal = 0;
    Vital = 1;
}