syntax = "proto3";

import "common.proto";
import "aelf_options.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "AElf.Contracts.ProposalContract";

service ProposalContract {
    option (aelf.csharp_state) = "AElf.Contracts.Proposal.ProposalContractState";
    // Actions
    rpc CreateProposal (CreateProposalInput) returns (Hash) {
    }
    rpc GetProposal(Hash) returns (GetProposalOutput) {
        option (aelf.is_view) = true;
    }
    rpc Approve (Approval) returns (google.protobuf.BoolValue) {
    }
}

message CreateProposalInput{
    string contractMethodName = 2;
    Address toAddress = 3;
    bytes params = 4;
    google.protobuf.Timestamp expiredTime = 5;
    Hash organizationAddress = 6;
    Address Proposer = 7;
}

message ApprovedResult {
    Hash proposalHash = 1;
    repeated Approval approvals = 5;
}

message Approval {
    Hash proposalHash = 1;
    bytes publicKey = 2;
}

message GetProposalOutput{
    Hash proposalHash = 1;
    string contractMethodName = 2;
    Address toAddress = 3;
    bytes params = 4;
    google.protobuf.Timestamp expiredTime = 5;
    Address proposer = 7;
}

message ProposalInfo {
    Hash proposalHash = 1;
    string contractMethodName = 2;
    Address toAddress = 3;
    bytes params = 4;
    google.protobuf.Timestamp expiredTime = 5;
    Address sender = 6;
    Address proposer = 7;
}