syntax = "proto3";

package vote;

import "aelf/core.proto";
import "aelf/options.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "AElf.Contracts.Vote";

service VoteContract {
    option (aelf.csharp_state) = "AElf.Contracts.Vote.VoteContractState";

    // Action
    rpc InitialVoteContract (InitialVoteContractInput) returns (google.protobuf.Empty) {
    }
    rpc Register (VotingRegisterInput) returns (google.protobuf.Empty) {
    }
    rpc Vote (VoteInput) returns (google.protobuf.Empty) {
    }
    rpc Withdraw (WithdrawInput) returns (google.protobuf.Empty) {
    }
    rpc UpdateEpochNumber (UpdateEpochNumberInput) returns (google.protobuf.Empty) {
    }
    rpc AddOption (AddOptionInput) returns (google.protobuf.Empty) {
    }
    rpc RemoveOption (RemoveOptionInput) returns (google.protobuf.Empty) {
    }
    
    // View
    rpc GetVotingEvent (GetVotingEventInput) returns (VotingEvent) {
        option (aelf.is_view) = true;
    }
    rpc GetVotingResult (GetVotingResultInput) returns (VotingResult) {
        option (aelf.is_view) = true;
    }
    rpc GetVotingRecord (aelf.Hash) returns (VotingRecord) {
        option (aelf.is_view) = true;
    }
    rpc GetVotingHistories (aelf.Address) returns (VotingHistories) {
        option (aelf.is_view) = true;
    }
    rpc GetVotingHistory (GetVotingHistoryInput) returns (VotingHistory) {
        option (aelf.is_view) = true;
    }
}


message InitialVoteContractInput {
    aelf.Hash token_contract_system_name = 1;
}

message VotingRegisterInput {
    string topic = 1;
    google.protobuf.Timestamp start_timestamp = 2;
    string accepted_currency = 3;
    sint32 active_days = 4;
    bool delegated = 5;
    sint32 total_epoch = 6;
    repeated string options = 7;
}

message VotingEvent {
    string topic = 1;
    aelf.Address sponsor = 2;
    string accepted_currency = 3;
    sint32 active_days = 4;
    bool delegated = 5;
    sint32 current_epoch = 6;
    sint32 total_epoch = 7;
    repeated string options = 8;
    google.protobuf.Timestamp register_timestamp = 9;
    google.protobuf.Timestamp start_timestamp = 10;
    google.protobuf.Timestamp epoch_start_timestamp = 11;
}

message VoteInput {
    string topic = 1;
    aelf.Address sponsor = 2;
    sint64 amount = 3;
    string option = 4;
    aelf.Hash vote_id = 5;
    aelf.Address voter = 6;
}

message WithdrawInput {
    aelf.Hash vote_id = 1;
}

message GetVotingResultInput {
    string topic = 1;
    aelf.Address sponsor = 2;
    sint32 epoch_number = 3;
}

message VotingResult {
    string topic = 1;
    aelf.Address sponsor = 2;
    sint32 epoch_number = 3;
    map<string, sint64> results = 4;
    sint32 voters_count = 5;
    google.protobuf.Timestamp start_timestamp = 6;
    google.protobuf.Timestamp end_timestamp = 7;
}

message UpdateEpochNumberInput {
    string topic = 1;
    sint32 epoch_number = 3;
}

message VotingRecord {
    string topic = 1;
    aelf.Address sponsor = 2;
    sint32 epoch_number = 3;
    aelf.Address voter = 4;
    sint64 amount = 5;
    google.protobuf.Timestamp withdraw_timestamp = 6;
    google.protobuf.Timestamp vote_timestamp = 7;
    bool is_withdrawn = 8;
    string option = 9;
    string currency = 10;
}

message AddOptionInput {
    string topic = 1;
    aelf.Address sponsor = 2;
    string option = 3;
}

message RemoveOptionInput {
    string topic = 1;
    aelf.Address sponsor = 2;
    string option = 3;
}

message VotingHistories {
    aelf.Address voter = 1;
    map<string, VotingHistory> votes = 2;
}

message VotingHistory {
    repeated aelf.Hash active_votes = 1;
    repeated aelf.Hash withdrawn_votes = 2;
}

message GetVotingHistoryInput {
    aelf.Address voter = 1;
    string topic = 2;
    aelf.Address sponsor = 3;
}

message GetVotingEventInput {
    string topic = 1;
    aelf.Address sponsor = 2;
}
