syntax = "proto3";

import "aelf/options.proto";
import "aelf/core.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "AElf.Contracts.TestContract.Events";

service EventsContract {
    option (aelf.csharp_state) = "AElf.Contracts.TestContract.Events.EventsContractState";
    //Actions
    rpc SwitchToken(SwitchTokenInput) returns (google.protobuf.Empty){
    }

    //View
    rpc QuerySwitchRecords(aelf.Address) returns (SwitchTokensOutput) {
    }
}

//Input
message SwitchTokenInput {
    string symbol_paid = 1;
    string symbol_obtain = 2;
    sint64 balance_paid = 3;
    sint64 balance_obtain = 4;
    aelf.Address seller = 5;
    string memo = 6;
}

//Output
message SwitchTokensOutput {
    repeated SwitchTokenOutput records = 1;
}

message SwitchTokenOutput {
    aelf.Address seller = 1;
    string symbol_paid = 2;
    string symbol_obtain = 3;
    sint64 balance_paid = 4;
    sint64 balance_obtain = 5;
}

//Event
message Transferred {
    option (aelf.is_event) = true;
    aelf.Address buyer = 1 [(aelf.is_indexed) = true];
    aelf.Address seller = 2 [(aelf.is_indexed) = true];
    string symbol_paid = 3;
    string symbol_obtain = 4;
    sint64 balance_paid = 5;
    sint64 balance_obtain = 6;
}