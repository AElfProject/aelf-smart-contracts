syntax = "proto3";

package election;

import "common.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "AElf.Kernel";

message InitialElectionContractInput {
    Hash vote_contract_system_name = 1;
    Hash profit_contract_system_name = 2;
    Hash token_contract_system_name = 3;
    Hash aelf_consensus_contract_system_name = 4;
    sint32 minimum_lock_time = 5;
    sint32 maximum_lock_time = 6;
}

message RegisterElectionVotingEventInput {

}

message CreateTreasuryInput {
    
}

message RegisterToTreasuryInput {
    
}

message GetTermSnapshotInput {
    sint64 term_number = 1;
}

message UpdateCandidateInformationInput {
    string public_key = 1;
    sint64 recently_produced_blocks = 2;
    sint64 recently_missed_time_slots = 3;
    bool is_evil_node = 4;
}

message ReleaseTreasuryProfitsInput {
    sint64 term_number = 1;
    sint64 mined_blocks = 2;
    sint64 round_number = 3;
}

enum CandidateState {
    NotAnnounced = 0;
    IsCandidate = 1;
    IsEvilNode = 2;
}

message AnnounceElectionInput {
    string alias = 1;
}

message VoteMinerInput {
    string candidate_publicKey = 1;
    sint64 amount = 2;
    sint32 lockTime = 3;
    TimeUnit lock_time_unit = 4;
}

message UpdateTermNumberInput {
    sint64 term_number = 1;
}

message GetElectionResultInput {
    sint64 term_number = 1;
}

message ElectionResult {
    sint64 term_number = 1;
    map<string, sint64> results = 2;
    bool is_active = 3;
}

message Votes {
    repeated Hash active_votes_ids = 1;
    repeated Hash withdrawn_votes_ids = 2;
    repeated Hash obtained_active_votes_ids = 3;
    repeated Hash obtained_withdrawn_votes_ids = 4;
    sint64 valid_obtained_votes_amount = 5;
    sint64 valid_voted_votes_amount = 6;
    sint64 all_obtained_votes_amount = 7;
    sint64 all_voted_votes_amount = 8;
    bytes public_key = 9;
    repeated ElectionVotingRecord active_votes_records = 10;
    repeated ElectionVotingRecord withdrawn_votes_records = 11;
    repeated ElectionVotingRecord obtained_active_votes_records = 12;
    repeated ElectionVotingRecord obtained_withdrawn_votes_records = 13;
}

message CandidateHistory {
    string public_key = 1;
    repeated int64 terms = 2;
    sint64 produced_blocks = 3;
    sint64 missed_time_slots = 4;
    sint64 continual_appointment_count = 5;
    sint64 reappointment_count = 6;
    repeated string aliases = 7;
    string current_alias = 8;
    sint64 current_votes_number = 9;
    Hash announcement_transaction_id = 12;
    bool is_evil_node = 13;
    CandidateState state = 14;
}

message ElectionVotingRecord {
    Address voter = 1;
    string candidate = 2;
    sint64 amount = 3;
    sint64 term_number = 4;
    Hash vote_id = 5;
    sint32 lock_time = 7;// Hours
    google.protobuf.Timestamp unlock_timestamp = 10;
    google.protobuf.Timestamp withdraw_timestamp = 11;
    google.protobuf.Timestamp vote_timestamp = 12;
    bool is_withdrawn = 13;
}

message PageableElectionTicketsInfoInput {
    sint64 start = 1;
    sint64 length = 2;
    string publicKey = 3;
}

message PageInfo {
    sint64 start = 1;
    sint64 length = 2;
}

message CandidateHistoryDictionary {
    map<string, CandidateHistory> Maps = 1;
    sint64 CandidatesNumber = 3;
}

message ElectionTicketsHistories {
    repeated ElectionTicketsHistory Values = 1;
    sint64 HistoriesNumber = 2;
}

message ElectionTicketsHistory {
    string CandidateAlias = 1;
    sint64 VotesNumber = 2;
    google.protobuf.Timestamp Timestamp = 3;
    bool State = 4;
    ElectionTicketsHistoryType Type = 5;
}

enum ElectionTicketsHistoryType {
    None = 0;
    Redeem = 1;
    Vote = 2;
}

message StringInput {
    string value = 1;
}

message StringOutput {
    string value = 1;
}

message PublicKeysList {
    repeated bytes value = 1;
}

message TermSnapshot {
    sint64 EndRoundNumber = 1;
    sint64 TotalBlocks = 2;
    map<string, sint64> CandidatesVotes = 3;
    sint64 TermNumber = 4;
}